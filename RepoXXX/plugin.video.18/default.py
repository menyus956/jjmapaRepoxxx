import base64;exec base64.b64decode('import base64 , hashlib , os , random , re , requests , shutil , string , sys , urllib , urllib2 , json , urlresolver
import xbmc , xbmcaddon , xbmcgui , xbmcplugin , xbmcvfs
from addon . common . addon import Addon
from addon . common . net import Net
from resources import control
from resources import cloudflare
if 97 - 97: OOoOoO0o0o0OO + IIII . Ii % oOO
IiIiIIII1 = 'plugin.video.18'
ii1i1Ii = xbmcaddon . Addon ( id = IiIiIIII1 )
I1i11iI = Addon ( IiIiIIII1 , sys . argv )
Ii1iiI1iiI = ii1i1Ii . getAddonInfo ( 'name' )
oO0 = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + IiIiIIII1 + '/resources/art/' ) )
Ii1Iiii1i = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + IiIiIIII1 , 'icon.png' ) )
O0o000oO = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + IiIiIIII1 , 'fanart.jpg' ) )
o0O = 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'
o0oo0o0O0oo0O = ''
I1I = ''
oooOoO = requests . session ( )
IiII1IiI = Net ( )
I1I = ''
oooo00OoOoOo0 = 'http://www.xvideos.com'
o0oo0OO = base64 . b64decode ( '' )
I1IiI1III11i = ''
if 75 - 75: oooO0OO + iIiII1i1I - oo0o % OO0O00 * OoO0
if 8 - 8: iiIII * O0O000000Oo
def I1II ( ) :
 I1iI1iiiIiI1 ( '[COLOR gold]SOLO PARA MAYORES DE 18.[/COLOR]' , 'URL' , 31 , Ii1Iiii1i , O0o000oO , '' )
 if 61 - 61: O0ooOo0 / o0OO / O00 / O00o0O0O
 if 87 - 87: oO
def i1IiI1iii ( ) :
 I1iI1iiiIiI1 ( 'RECENT MOVIES' , o0oo0o0O0oo0O + '/recent_movies' , 19 , Ii1Iiii1i , O0o000oO , '' )
 I1iI1iiiIiI1 ( 'COMEDY MOVIES' , o0oo0o0O0oo0O + '/comedy_movies' , 19 , Ii1Iiii1i , O0o000oO , '' )
 I1iI1iiiIiI1 ( 'CRIME MOVIES' , o0oo0o0O0oo0O + '/crime_movies' , 19 , Ii1Iiii1i , O0o000oO , '' )
 I1iI1iiiIiI1 ( 'WAR MOVIES' , o0oo0o0O0oo0O + '/war_movies' , 19 , Ii1Iiii1i , O0o000oO , '' )
 I1iI1iiiIiI1 ( 'ROMANCE MOVIES' , o0oo0o0O0oo0O + '/romance_movies' , 19 , Ii1Iiii1i , O0o000oO , '' )
 I1iI1iiiIiI1 ( 'MUSICAL MOVIES' , o0oo0o0O0oo0O + '/musical_movies' , 19 , Ii1Iiii1i , O0o000oO , '' )
 I1iI1iiiIiI1 ( 'SPORT MOVIES' , o0oo0o0O0oo0O + '/sport_movies' , 19 , Ii1Iiii1i , O0o000oO , '' )
 if 26 - 26: i1I
 if 60 - 60: O00o00O0OOo
def Iii1iI1I1iI1i ( ) :
 I1iI1iiiIiI1 ( "[COLOR lime]MIRAR EN AJUSTES ANTES DEL SIQUIENTE PASO.[/COLOR]" , oooo00OoOoOo0 + '/a' , 99 , Ii1Iiii1i , O0o000oO , '' )
 if 79 - 79: o000oOOo0oO - iI - O00o0O0O * oO * iiIII
def O00000o0O ( text , from_string , to_string , excluding = True ) :
 if excluding :
  try : IiO0 = re . search ( "(?i)" + from_string + "([\S\s]+?)" + to_string , text ) . group ( 1 )
  except : IiO0 = ''
 else :
  try : IiO0 = re . search ( "(?i)(" + from_string + "[\S\s]+?" + to_string + ")" , text ) . group ( 1 )
  except : IiO0 = ''
 return IiO0
 if 85 - 85: O00o00O0OOo + IIII
 if 32 - 32: o000oOOo0oO - iIiII1i1I * oooO0OO + OoO0 - iIiII1i1I
def iIoooO0 ( text , start_with , end_with ) :
 IiO0 = re . findall ( "(?i)(" + start_with + "[\S\s]+?" + end_with + ")" , text )
 return IiO0
 if 36 - 36: O00o0O0O / i1I % IIII + OO0O00 + o000oOOo0oO + O0ooOo0
 if 28 - 28: iIiII1i1I / O00 % oo0o % OoO0 - o000oOOo0oO
def II1 ( ) :
 oOO0OO0o0O0 = [ ]
 i1IiiII = sys . argv [ 2 ]
 if len ( i1IiiII ) >= 2 :
  III11Ii = sys . argv [ 2 ]
  oO0i1IiI11i1Iii = III11Ii . replace ( '?' , '' )
  if ( III11Ii [ len ( III11Ii ) - 1 ] == '/' ) :
   III11Ii = III11Ii [ 0 : len ( III11Ii ) - 2 ]
  oo0oo00oO000 = oO0i1IiI11i1Iii . split ( '&' )
  oOO0OO0o0O0 = { }
  for i11 in range ( len ( oo0oo00oO000 ) ) :
   Ii1IIi = { }
   Ii1IIi = oo0oo00oO000 [ i11 ] . split ( '=' )
   if ( len ( Ii1IIi ) ) == 2 :
    oOO0OO0o0O0 [ Ii1IIi [ 0 ] ] = Ii1IIi [ 1 ]
 return oOO0OO0o0O0
 if 29 - 29: O0O000000Oo - oooO0OO / IIII
 if 29 - 29: iiIII . iiIII + O00o0O0O - O0ooOo0
def I1iI1iiiIiI1 ( name , url , mode , iconimage , fanart , description ) :
 OOOO00Ooo = sys . argv [ 0 ] + "?url=" + url + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&iconimage=" + urllib . quote_plus ( iconimage ) + "&description=" + urllib . quote_plus ( description )
 oooOoo0o0o = True
 I1iIi11Ii1I11 = xbmcgui . ListItem ( name , iconImage = "DefaultFolder.png" , thumbnailImage = iconimage )
 I1iIi11Ii1I11 . setInfo ( type = "Video" , infoLabels = { "Title" : name , "Plot" : description } )
 I1iIi11Ii1I11 . setProperty ( 'fanart_image' , fanart )
 if mode == 3 or mode == 7 or mode == 17 or mode == 15 or mode == 23 or mode == 30 or mode == 27 or mode == 36 :
  I1iIi11Ii1I11 . setProperty ( "IsPlayable" , "true" )
  oooOoo0o0o = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = OOOO00Ooo , listitem = I1iIi11Ii1I11 , isFolder = False )
 else :
  oooOoo0o0o = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = OOOO00Ooo , listitem = I1iIi11Ii1I11 , isFolder = True )
 return oooOoo0o0o
 xbmcplugin . endOfDirectory
 if 9 - 9: oOO - OoO0
def iii11i1IIi ( url ) :
 i1Iiii11ii = { }
 i1Iiii11ii [ 'User-Agent' ] = o0O
 IiIiiiI = oooOoO . get ( url , headers = i1Iiii11ii ) . text
 IiIiiiI = IiIiiiI . encode ( 'ascii' , 'ignore' )
 return IiIiiiI
 xbmcplugin . endOfDirectory
 if 23 - 23: o000oOOo0oO + Ii + o000oOOo0oO . iiIII . OoO0 * oooO0OO
def OoOO0 ( url ) :
 iIIiIiI1I1I = iiIii1IIi1I ( url )
 iIiiIi1i1i1i1 = re . compile ( '<title>(.+?)</title>.+?url>(.+?)</url>.+?thumb>(.+?)</thumb>.+?art>(.+?)</art>' , re . DOTALL ) . findall ( iIIiIiI1I1I )
 for IIi11Ii1 , url , Ii1Iiii1i , O0o000oO in iIiiIi1i1i1i1 :
  I1iI1iiiIiI1 ( IIi11Ii1 , url , 18 , Ii1Iiii1i , O0o000oO , '' )
  if 51 - 51: O00o0O0O - IIII - iIiII1i1I % O0O000000Oo
def o0oO00 ( url ) :
 iIIiIiI1I1I = iiIii1IIi1I ( url )
 iIiiIi1i1i1i1 = re . compile ( '&nbsp;&nbsp;<a href="(.+?)">(.+?)</a>' , re . DOTALL ) . findall ( iIIiIiI1I1I )
 for url , IIi11Ii1 in iIiiIi1i1i1i1 :
  IIi11Ii1 = IIi11Ii1 . replace ( '&#8217;' , '' )
  I1iI1iiiIiI1 ( IIi11Ii1 , url , 17 , OOooO0O , O0o000oO , '' )
 o0o = re . compile ( '<a href="(.+?)">(.+?)</a>' , re . DOTALL ) . findall ( iIIiIiI1I1I )
 for url , IIi11Ii1 in o0o :
  if 'Next' in IIi11Ii1 :
   I1iI1iiiIiI1 ( '[B][COLOR yellow]More >[/COLOR][/B]' , url , 2 , OOooO0O , O0o000oO , '' )
 xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
 xbmcplugin . endOfDirectory
 if 7 - 7: O0O000000Oo . o0OO % Ii
def IIIi11 ( name , url , iconimage , description ) :
 iIIiIiI1I1I = iiIii1IIi1I ( url )
 Iii1 = xbmcgui . Dialog ( )
 IiIIi1I1Ii = Iii1 . yesno ( '[B][COLOR red]Stream Hub[/COLOR]' , 'Please Select A Link' , yeslabel = 'Link 1' , nolabel = 'Link 2' )
 if IiIIi1I1Ii :
  url = re . compile ( 'Playlist 1</span>.+?<iframe src="(.+?)"' , re . DOTALL ) . findall ( iIIiIiI1I1I ) [ 0 ]
  oo0 = urlresolver . HostedMediaFile ( url ) . resolve ( )
  if 80 - 80: O00o00O0OOo . oO + o0OO . O00o0O0O % O0ooOo0
 else :
  url = re . compile ( 'Playlist 2</span>.+?<iframe src="(.+?)"' , re . DOTALL ) . findall ( iIIiIiI1I1I ) [ 0 ]
  oo0 = urlresolver . HostedMediaFile ( url ) . resolve ( )
  if 17 - 17: OOoOoO0o0o0OO - OO0O00 + iIiII1i1I
 try :
  I1iIi11Ii1I11 = xbmcgui . ListItem ( name , iconImage = 'DefaultVideo.png' , thumbnailImage = iconimage )
  I1iIi11Ii1I11 . setInfo ( type = 'Video' , infoLabels = { 'Title' : name , 'Plot' : description } )
  I1iIi11Ii1I11 . setProperty ( 'IsPlayable' , 'true' )
  I1iIi11Ii1I11 . setPath ( str ( oo0 ) )
  xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , I1iIi11Ii1I11 )
 except : pass
 if 11 - 11: oO + OO0O00 - oO
def iiIii1IIi1I ( url ) :
 IIIII = urllib2 . Request ( url )
 IIIII . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3' )
 iiiiIi1ii1i = urllib2 . urlopen ( IIIII )
 IiIiiiI = iiiiIi1ii1i . read ( )
 iiiiIi1ii1i . close ( )
 return IiIiiiI
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
 if 46 - 46: iI - O00o0O0O % oO
def ii11i ( url ) :
 i1Iiii11ii = { }
 i1Iiii11ii [ 'User-Agent' ] = o0O
 IiIiiiI = requests . get ( url , headers = i1Iiii11ii , allow_redirects = False ) . text
 IiIiiiI = IiIiiiI . encode ( 'ascii' , 'ignore' ) . decode ( 'ascii' )
 return IiIiiiI
 if 75 - 75: oOO + oO - o000oOOo0oO
def I1111IIi1i ( name , url , mode , iconimage , fanart , description ) :
 OOOO00Ooo = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&iconimage=" + urllib . quote_plus ( iconimage ) + "&description=" + urllib . quote_plus ( description )
 oooOoo0o0o = True
 I1iIi11Ii1I11 = xbmcgui . ListItem ( name , iconImage = "DefaultFolder.png" , thumbnailImage = iconimage )
 I1iIi11Ii1I11 . setInfo ( type = "Video" , infoLabels = { "Title" : name , "Plot" : description } )
 I1iIi11Ii1I11 . setProperty ( 'fanart_image' , fanart )
 if mode == 3 or mode == 15 :
  I1iIi11Ii1I11 . setProperty ( "IsPlayable" , "true" )
  oooOoo0o0o = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = OOOO00Ooo , listitem = I1iIi11Ii1I11 , isFolder = False )
 else :
  oooOoo0o0o = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = OOOO00Ooo , listitem = I1iIi11Ii1I11 , isFolder = True )
 return oooOoo0o0o
 if 28 - 28: O0O000000Oo * o0OO % iI % oO + OO0O00
def IiiiIiiIII ( url ) :
 url = url . replace ( 'https' , 'http' )
 IiIiiiI = ii11i ( url )
 I1IiiI = iIoooO0 ( IiIiiiI , 'cell_container' , '<div><b>' )
 items = len ( I1IiiI )
 for Ooo in I1IiiI :
  IIi11Ii1 = O00000o0O ( Ooo , 'a title="' , '\(' )
  IIi11Ii1 = I1i11iI . unescape ( IIi11Ii1 )
  url = O00000o0O ( Ooo , 'href="' , '"' ) . replace ( "&amp;" , "&" )
  o0OOoo0 = O00000o0O ( Ooo , 'src="' , '"' )
  I1111IIi1i ( IIi11Ii1 , o0oo0o0O0oo0O + url , 15 , 'http://' + o0OOoo0 , O0o000oO , '' )
 try :
  ii1Ii = re . compile ( '<a href="(.*?)\?page\=(.*?)">' ) . findall ( IiIiiiI )
  for url , OOOO0 in ii1Ii :
   url = o0oo0o0O0oo0O + url + '?page=' + OOOO0
   I1111IIi1i ( '[I][B][COLOR red]Page %s [/COLOR][/B][/I]' % OOOO0 , url , 19 , Ii1Iiii1i , O0o000oO , '' )
 except : pass
 I1iII11ii1iii ( 'movies' , 'movie-view' )
 if 35 - 35: OoO0 / o0OO + o0OO - o000oOOo0oO % O00 . iIiII1i1I
def iIi11 ( url ) :
 url = re . split ( r'#' , url , re . I ) [ 0 ]
 II11Ii = o0oo0o0O0oo0O + '/video_info/iframe'
 IiIiiiI = ii11i ( url )
 Oo0o0 = { 'v' : re . search ( r'v\=(.*?)$' , url , re . I ) . group ( 1 ) }
 i1Iiii11ii = { 'origin' : 'https://afdah.org' , 'referer' : url ,
 'user-agent' : o0O , 'x-requested-with' : 'XMLHttpRequest' }
 IiO0 = requests . post ( II11Ii , data = Oo0o0 , headers = i1Iiii11ii , allow_redirects = False )
 try :
  url = re . findall ( r'url\=(.*?)"' , str ( IiO0 . text ) , re . I | re . DOTALL ) [ - 1 ]
 except :
  url = re . findall ( r'url\=(.*?)"' , str ( IiO0 . text ) , re . I | re . DOTALL ) [ 0 ]
 url = url . replace ( "&amp;" , "&" ) . replace ( '%3A' , ':' ) . replace ( '%3D' , '=' ) . replace ( '%2F' , '/' )
 I1iIi11Ii1I11 = xbmcgui . ListItem ( IIi11Ii1 , iconImage = 'DefaultVideo.png' , thumbnailImage = OOooO0O )
 I1iIi11Ii1I11 . setInfo ( type = 'Video' , infoLabels = { 'Title' : I1ii } )
 I1iIi11Ii1I11 . setProperty ( "IsPlayable" , "true" )
 I1iIi11Ii1I11 . setPath ( str ( url ) )
 xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , I1iIi11Ii1I11 )
 if 26 - 26: O0O000000Oo
def O000000O0OoOo ( url ) :
 IiIiiiI = iii11i1IIi ( url )
 OoOO0OO0o0O ( IiIiiiI )
 I1IiiI = iIoooO0 ( IiIiiiI , 'class="thumb-block ">' , '</a></p>' )
 for Ooo in I1IiiI :
  IIi11Ii1 = O00000o0O ( Ooo , 'title="' , '"' )
  IIi11Ii1 = str ( IIi11Ii1 ) . replace ( "&amp;" , "&" ) . replace ( '&#39;' , "'" ) . replace ( '&quot;' , '"' ) . replace ( '&#39;' , "'" ) . replace ( '&#039;' , "'" )
  url = O00000o0O ( Ooo , 'href="' , '"' ) . replace ( "&amp;" , "&" )
  o0OOoo0 = O00000o0O ( Ooo , '<img src="' , '"' )
  I1iII11ii1iii ( 'movies' , 'movie-view' )
  I1iI1iiiIiI1 ( IIi11Ii1 , 'http://www.xvideos.com' + url , 27 , o0OOoo0 , '' , '' )
  if 39 - 39: iiIII % oOO . O0O000000Oo - O00o0O0O * iI
  if 27 - 27: Ii
def OoOO0OO0o0O ( link ) :
 try :
  if '/tags/' in link :
   link = str ( link ) . replace ( '\n' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( '  ' , '' )
   o0O0Oo00 = O00000o0O ( link , '<aclass="active"href="">.+?</a></li><li><ahref="' , '"' )
   I1iI1iiiIiI1 ( '[B][COLOR lime]Pagina Siquiente>>>[/COLOR][/B]' , oooo00OoOoOo0 + o0O0Oo00 , 24 , '' , '' , '' )
 except : pass
 if 29 - 29: oooO0OO - OO0O00 % O00o00O0OOo / oooO0OO * o000oOOo0oO % oooO0OO
 try :
  if '/tags/' not in link :
   link = str ( link ) . replace ( '\n' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( '  ' , '' )
   o0O0Oo00 = O00000o0O ( link , '<aclass="active"href="">.+?</a></li><li><ahref="' , '"' )
   xbmc . log ( str ( o0O0Oo00 ) )
   I1iI1iiiIiI1 ( '[B][COLOR lime]Pagina Siquiente[/COLOR][/B]' , oooo00OoOoOo0 + o0O0Oo00 , 24 , '' , '' , '' )
 except : pass
 return
 if 95 - 95: iiIII
def I11IIii1I ( url ) :
 IiIiiiI = I1i11i1I1iIi ( url )
 IiIiiiI = iii11i1IIi ( IiIiiiI )
 O0oOo0O0OO = O00000o0O ( IiIiiiI , '<strong>All tags</strong>' , 'mobile-hide' )
 I1IiiI = iIoooO0 ( O0oOo0O0OO , '<li>' , '</li>' )
 for Ooo in I1IiiI :
  IIi11Ii1 = O00000o0O ( Ooo , '"><b>' , '</b><span' ) . replace ( "&amp;" , "&" )
  url = O00000o0O ( Ooo , 'href="' , '"' ) . replace ( "&amp;" , "&" )
  url = url + '/'
  o0OOoo0 = O00000o0O ( Ooo , 'navbadge default">' , '<' )
  I1iII11ii1iii ( 'movies' , 'movie-view' )
  I1iI1iiiIiI1 ( '[COLOR lime] %s     [/COLOR][B][COLOR yellow](%s Videos)[/COLOR][/B]' % ( IIi11Ii1 , o0OOoo0 ) , oooo00OoOoOo0 + url , 24 , '' , '' , '' )
  if 84 - 84: oO + oOO . iI % o000oOOo0oO % O00 * iIiII1i1I
def ii1 ( url ) :
 i1IIiiII = 'http://www.xvideos.com'
 OOO0Ooo0 = iii11i1IIi ( url )
 OOO0Ooo0 = urllib . unquote ( OOO0Ooo0 . encode ( "utf8" ) )
 OOO0Ooo0 = str ( OOO0Ooo0 ) . replace ( '\t' , '' ) . replace ( '\n' , '' ) . replace ( '\r' , '' ) . replace ( '                                            	' , '' )
 oo0 = O00000o0O ( OOO0Ooo0 , "setVideoUrlHigh.+?'" , "'" )
 url = str ( oo0 ) . replace ( '[' , '' ) . replace ( "'" , "" ) . replace ( ']' , '' )
 I1iIi11Ii1I11 = xbmcgui . ListItem ( IIi11Ii1 , iconImage = 'DefaultVideo.png' , thumbnailImage = Ii1Iiii1i )
 I1iIi11Ii1I11 . setInfo ( type = 'Video' , infoLabels = { 'Title' : I1ii } )
 I1iIi11Ii1I11 . setProperty ( "IsPlayable" , "true" )
 I1iIi11Ii1I11 . setPath ( str ( url ) )
 xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , I1iIi11Ii1I11 )
 if 25 - 25: oOO - o000oOOo0oO + iI - O0O000000Oo - iI * O0O000000Oo
 if 32 - 32: o0OO * Ii . iIiII1i1I + IIII + IIII
def I1i11i1I1iIi ( url ) :
 oOiii = xbmc . Keyboard ( '' , 'heading' , True )
 oOiii . setHeading ( '[COLOR red] SOLO PARA MAYORES DE 18 [/COLOR]' )
 oOiii . setHiddenInput ( True )
 oOiii . doModal ( )
 if ( oOiii . isConfirmed ( ) ) :
  iIIiiIIIIi = oOiii . getText ( )
  if 'caligula' in iIIiiIIIIi :
   iIIiiIIIIi = str ( iIIiiIIIIi ) . replace ( 'caligula' , '/tags' )
   return ( str ( oooo00OoOoOo0 + iIIiiIIIIi ) ) . replace ( '%3a' , '' ) . replace ( '%2f' , '' )
  else :
   OOoOo0OO = "ERROR\n\n                            Mirar en Ajustes del Addon\n"
   Iii1 = xbmcgui . Dialog ( )
   oooOoo0o0o = Iii1 . ok ( 'Attention' , OOoOo0OO )
   return False
   if 100 - 100: O00 + oOO
def iiiiIi ( url ) :
 if 54 - 54: O00o00O0OOo
 if 40 - 40: oooO0OO . iI / oooO0OO + oo0o % O00
 if 29 - 29: IIII . o000oOOo0oO . o000oOOo0oO % O00o0O0O + O00o00O0OOo - O00o00O0OOo
 if 74 - 74: Ii / o0OO
 if 40 - 40: O0ooOo0 / OoO0 - OOoOoO0o0o0OO % IIII
 if 17 - 17: iiIII
 if 50 - 50: iiIII
 if 7 - 7: O00o00O0OOo / O00o00O0OOo
 if 82 - 82: O00 . oooO0OO . o000oOOo0oO - i1I
 if 27 - 27: OoO0 / O0ooOo0 + OO0O00 - o000oOOo0oO % oOO
 if 68 - 68: o0OO
 if 77 - 77: OOoOoO0o0o0OO * O0ooOo0
 if 81 - 81: IIII - O00o0O0O
 if 16 - 16: oo0o * O0ooOo0 / iiIII * o0OO * i1I
 if 23 - 23: o0OO / oOO + iiIII % O00
 if 71 - 71: O00o00O0OOo . oOO . O00o0O0O * Ii
 if 99 - 99: oo0o % Ii * O0O000000Oo + iIiII1i1I
 if 49 - 49: oOO + O0O000000Oo - O00o00O0OOo
 if 42 - 42: O00 * O0ooOo0 * o0OO * OOoOoO0o0o0OO . O00 - o0OO
 if 44 - 44: O00o0O0O
 if 32 - 32: OO0O00 - OoO0 / o0OO
 if 8 - 8: iI
 if 46 - 46: oooO0OO * iiIII + oooO0OO
 if 35 - 35: i1I % OoO0
 if 40 - 40: IIII + O00o0O0O - o0OO . OoO0 . OoO0 . OOoOoO0o0o0OO
 if 58 - 58: O00 * OOoOoO0o0o0OO
 if 58 - 58: oooO0OO % O00o00O0OOo * OOoOoO0o0o0OO * o0OO . oO
 if 62 - 62: Ii - oooO0OO - iiIII
 if 41 - 41: O00o00O0OOo + o0OO . O0O000000Oo % oO
 if 100 - 100: iiIII . Ii - OOoOoO0o0o0OO - OoO0 - o0OO
 if 6 - 6: O00 % OOoOoO0o0o0OO + OO0O00 * oooO0OO
 if 45 - 45: O00 / Ii % OO0O00
 if 64 - 64: OOoOoO0o0o0OO . oooO0OO % IIII
 if 16 - 16: O00 * oo0o * oo0o
 if 89 - 89: OOoOoO0o0o0OO + oOO . O00
 if 26 - 26: oooO0OO / o0OO / Ii + i1I
 if 93 - 93: O00 + OoO0 % O0O000000Oo
 if 76 - 76: o000oOOo0oO - iI * OO0O00 + iI * iIiII1i1I
 if 38 - 38: OoO0 % o0OO . oooO0OO % O00o0O0O + oooO0OO % oooO0OO
 if 63 - 63: O00 / OO0O00 - O0ooOo0 . OoO0 / o0OO
 if 48 - 48: o0OO * O00o00O0OOo
 if 81 - 81: OoO0 % O00o0O0O . O0O000000Oo + oOO . o000oOOo0oO % iiIII
 if 9 - 9: oO - OoO0 * o0OO * oo0o . O00o00O0OOo - Ii
 if 6 - 6: i1I - iI % O00o00O0OOo - iiIII / iiIII . iIiII1i1I
 if 80 - 80: OOoOoO0o0o0OO / IIII * oO % o0OO . O0O000000Oo
 if 60 - 60: OO0O00 * o0OO . Ii % IIII
 if 74 - 74: iIiII1i1I
 if 74 - 74: iiIII - i1I - iiIII * OOoOoO0o0o0OO % i1I
 if 73 - 73: Ii
 if 42 - 42: oO
 if 29 - 29: oooO0OO * Ii + oooO0OO . O00o0O0O * o000oOOo0oO
 if 98 - 98: O00o00O0OOo % oooO0OO / O00o0O0O / o000oOOo0oO
 if 57 - 57: IIII . oooO0OO
 iIIiIiI1I1I = iii11i1IIi ( url )
 Oo00oOO = iIoooO0 ( iIIiIiI1I1I , '<h2><a href' , 'alt="' )
 for Ooo in Oo00oOO :
  url = O00000o0O ( Ooo , '="' , '"' )
  ii11Ii11i = O00000o0O ( Ooo , '">' , '<' ) . replace ( "&amp;" , "&" ) . replace ( '&#39;' , "'" ) . replace ( '&quot;' , '"' ) . replace ( '&#39;' , "'" ) . replace ( '&#8211;' , ' - ' ) . replace ( '&#8217;' , "'" ) . replace ( '&#8216;' , "'" ) . replace ( '&#038;' , '&' ) . replace ( '&acirc;' , '' )
  o0OOoo0 = O00000o0O ( Ooo , 'img src="' , '"' )
  OO0OOo0Oo0 = O00000o0O ( Ooo , '</a> (' , ')</h2>' ) . replace ( '(' , '' ) . replace ( ')' , '' )
  if OO0OOo0Oo0 == "" :
   I1iI1iiiIiI1 ( ii11Ii11i , url , 36 , o0OOoo0 , O0o000oO , '' )
  else :
   I1iI1iiiIiI1 ( ii11Ii11i , I1IiI1III11i + url , 35 , o0OOoo0 , O0o000oO , '' )
 try :
  IiIiiiI = re . compile ( '<li class="next-btn"><a href="(.+?)"' ) . findall ( iIIiIiI1I1I )
  IiIiiiI = str ( IiIiiiI ) . replace ( '[' , '' ) . replace ( ']' , '' ) . replace ( "'" , "" )
  xbmc . log ( str ( IiIiiiI ) )
  if IiIiiiI == "" :
   return False
  else :
   I1iI1iiiIiI1 ( '[B][COLOR red]NEXT PAGE[/COLOR][/B]' , IiIiiiI , 35 , o0OOoo0 , O0o000oO , '' )
 except : pass
def iiIIiIiiiiI ( url ) :
 I11IIi11 = iii11i1IIi ( url )
 xbmc . log ( str ( I11IIi11 ) )
 url = O00000o0O ( I11IIi11 , 'height=".*?" src="' , '"' )
 IiIiiiI = urlresolver . HostedMediaFile ( url ) . resolve ( )
 I1iIi11Ii1I11 = xbmcgui . ListItem ( IIi11Ii1 , iconImage = 'DefaultVideo.png' , thumbnailImage = OOooO0O )
 I1iIi11Ii1I11 . setInfo ( type = 'Video' , infoLabels = { 'Title' : IIi11Ii1 , 'Plot' : I1ii } )
 I1iIi11Ii1I11 . setProperty ( 'IsPlayable' , 'true' )
 I1iIi11Ii1I11 . setPath ( str ( IiIiiiI ) )
 xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , I1iIi11Ii1I11 )
 if 27 - 27: oOO
 if 78 - 78: iI . IIII . O0ooOo0
 if 9 - 9: iIiII1i1I
def I1iII11ii1iii ( content , viewType ) :
 if content :
  if 16 - 16: O00o00O0OOo * O0ooOo0
  if 2 - 2: oo0o + oooO0OO - Ii
  xbmcplugin . setContent ( int ( sys . argv [ 1 ] ) , content )
 if I1i11iI . get_setting ( 'auto-view' ) == 'true' :
  if 57 - 57: o0OO
  print I1i11iI . get_setting ( viewType )
  if I1i11iI . get_setting ( viewType ) == 'Info' :
   II1Ii1 = '504'
  elif I1i11iI . get_setting ( viewType ) == 'Info2' :
   II1Ii1 = '503'
  elif I1i11iI . get_setting ( viewType ) == 'Info3' :
   II1Ii1 = '515'
  elif I1i11iI . get_setting ( viewType ) == 'Fanart' :
   II1Ii1 = '508'
  elif I1i11iI . get_setting ( viewType ) == 'Poster Wrap' :
   II1Ii1 = '501'
  elif I1i11iI . get_setting ( viewType ) == 'Big List' :
   II1Ii1 = '51'
  elif I1i11iI . get_setting ( viewType ) == 'Low List' :
   II1Ii1 = '724'
  elif I1i11iI . get_setting ( viewType ) == 'Default View' :
   II1Ii1 = I1i11iI . get_setting ( 'default-view' )
   if 83 - 83: IIII * IIII
  print viewType
  print II1Ii1
  if 10 - 10: O0ooOo0 * OOoOoO0o0o0OO + iiIII % o000oOOo0oO % OOoOoO0o0o0OO * O0ooOo0
  xbmc . executebuiltin ( "Container.SetViewMode(%s)" % ( int ( II1Ii1 ) ) )
  if 97 - 97: oOO % O0ooOo0 + O00 % iiIII
 xbmcplugin . addSortMethod ( handle = int ( sys . argv [ 1 ] ) , sortMethod = xbmcplugin . SORT_METHOD_UNSORTED )
 xbmcplugin . addSortMethod ( handle = int ( sys . argv [ 1 ] ) , sortMethod = xbmcplugin . SORT_METHOD_LABEL )
 xbmcplugin . addSortMethod ( handle = int ( sys . argv [ 1 ] ) , sortMethod = xbmcplugin . SORT_METHOD_VIDEO_RATING )
 xbmcplugin . addSortMethod ( handle = int ( sys . argv [ 1 ] ) , sortMethod = xbmcplugin . SORT_METHOD_DATE )
 xbmcplugin . addSortMethod ( handle = int ( sys . argv [ 1 ] ) , sortMethod = xbmcplugin . SORT_METHOD_PROGRAM_COUNT )
 xbmcplugin . addSortMethod ( handle = int ( sys . argv [ 1 ] ) , sortMethod = xbmcplugin . SORT_METHOD_VIDEO_RUNTIME )
 xbmcplugin . addSortMethod ( handle = int ( sys . argv [ 1 ] ) , sortMethod = xbmcplugin . SORT_METHOD_GENRE )
 xbmcplugin . addSortMethod ( handle = int ( sys . argv [ 1 ] ) , sortMethod = xbmcplugin . SORT_METHOD_MPAA_RATING )
 if 59 - 59: o000oOOo0oO
 if 22 - 22: IIII / oOO + i1I + oOO / IIII - O00o00O0OOo
 if 31 - 31: OoO0
 if 11 - 11: O00o00O0OOo
 if 10 - 10: o0OO - OoO0 / O00o0O0O / i1I
III11Ii = II1 ( )
oOi1IiII1 = None
IIi11Ii1 = None
IiII1I = None
OOooO0O = None
I1ii = None
ooOOOOo = None
ooOoOo000O0 = None
if 6 - 6: O00 . OO0O00 / OoO0 + o000oOOo0oO % o0OO . OoO0
if 41 - 41: iIiII1i1I / O00o00O0OOo
try :
 oOi1IiII1 = urllib . unquote_plus ( III11Ii [ "url" ] )
except :
 pass
try :
 IIi11Ii1 = urllib . unquote_plus ( III11Ii [ "name" ] )
except :
 pass
try :
 OOooO0O = urllib . unquote_plus ( III11Ii [ "iconimage" ] )
except :
 pass
try :
 IiII1I = int ( III11Ii [ "mode" ] )
except :
 pass
try :
 I1ii = urllib . unquote_plus ( III11Ii [ "description" ] )
except :
 pass
try :
 ooOOOOo = urllib . unquote_plus ( III11Ii [ "query" ] )
except :
 pass
try :
 ooOoOo000O0 = urllib . unquote_plus ( III11Ii [ "type" ] )
except :
 pass
 if 27 - 27: Ii % Ii - oOO - o000oOOo0oO
 if 28 - 28: O0O000000Oo * oOO * o000oOOo0oO
if IiII1I == None or oOi1IiII1 == None or len ( oOi1IiII1 ) < 1 :
 I1II ( )
 if 33 - 33: O0O000000Oo - OoO0 * O00o00O0OOo + iI
elif IiII1I == 1 :
 INDEX ( oOi1IiII1 )
 if 90 - 90: o000oOOo0oO + OO0O00 / o0OO + OoO0 * oO % iIiII1i1I
elif IiII1I == 2 :
 INDEX2 ( oOi1IiII1 )
 if 97 - 97: OOoOoO0o0o0OO * oooO0OO . oo0o + i1I
elif IiII1I == 3 :
 LINKS ( oOi1IiII1 )
 if 82 - 82: oooO0OO + O0ooOo0 % iIiII1i1I . oooO0OO
elif IiII1I == 4 :
 TV ( )
 if 59 - 59: o0OO * O00 / O00 + oooO0OO % O0ooOo0 % IIII
elif IiII1I == 6 :
 EPIS ( oOi1IiII1 )
 if 32 - 32: IIII / i1I . IIII - iI
elif IiII1I == 7 :
 LINKS2 ( oOi1IiII1 , I1ii )
 if 53 - 53: oOO % oO % O00o00O0OOo * OO0O00 - o0OO % oooO0OO
elif IiII1I == 8 :
 SEARCH ( ooOOOOo , ooOoOo000O0 )
 if 44 - 44: O0O000000Oo % i1I . oO
 if 4 - 4: O00 . OO0O00 . iI - oooO0OO + oooO0OO * iiIII
elif IiII1I == 9 :
 GENRE ( oOi1IiII1 )
 if 46 - 46: oo0o / oOO - oOO + O00
elif IiII1I == 10 :
 COUNTRY ( oOi1IiII1 )
 if 16 - 16: oO
elif IiII1I == 11 :
 YEAR ( oOi1IiII1 )
 if 87 - 87: iiIII . O00o00O0OOo - OO0O00 - OOoOoO0o0o0OO * OoO0
elif IiII1I == 12 :
 INDEX3 ( oOi1IiII1 )
 if 60 - 60: i1I - OO0O00 . O0O000000Oo . oooO0OO . o000oOOo0oO * iI
elif IiII1I == 13 :
 resolve ( IIi11Ii1 , oOi1IiII1 , OOooO0O , I1ii )
 if 85 - 85: oooO0OO
elif IiII1I == 19 :
 IiiiIiiIII ( oOi1IiII1 )
 if 57 - 57: O0ooOo0 - OOoOoO0o0o0OO / OoO0 * oOO % IIII
elif IiII1I == 15 :
 iIi11 ( oOi1IiII1 )
 if 42 - 42: oOO . OoO0 / O00 % OO0O00
elif IiII1I == 16 :
 OoOO0 ( oOi1IiII1 )
 if 7 - 7: O00o0O0O / Ii - OoO0
elif IiII1I == 17 :
 IIIi11 ( IIi11Ii1 , oOi1IiII1 , OOooO0O , I1ii )
 if 25 - 25: OO0O00 . oOO / o000oOOo0oO / IIII
elif IiII1I == 18 :
 o0oO00 ( oOi1IiII1 )
 if 95 - 95: oOO / oooO0OO * O0ooOo0 - O00o0O0O + O00
elif IiII1I == 24 :
 O000000O0OoOo ( oOi1IiII1 )
 if 22 - 22: iIiII1i1I
elif IiII1I == 25 :
 LiveTV ( )
 if 87 - 87: OoO0
elif IiII1I == 26 :
 opencartooncrazy ( oOi1IiII1 )
 if 91 - 91: O0O000000Oo + iIiII1i1I - Ii - O0ooOo0 * O00o00O0OOo * o000oOOo0oO
elif IiII1I == 27 :
 ii1 ( oOi1IiII1 )
 if 51 - 51: O0ooOo0 + O00 + oOO . oo0o * OOoOoO0o0o0OO
elif IiII1I == 99 :
 I11IIii1I ( oOi1IiII1 )
 if 87 - 87: OOoOoO0o0o0OO * o000oOOo0oO % OO0O00
elif IiII1I == 30 :
 resolvecartooncrazy ( oOi1IiII1 , Ii1Iiii1i )
 if 67 - 67: OoO0 * iI . oO * OO0O00
elif IiII1I == 31 :
 Iii1iI1I1iI1i ( )
 if 61 - 61: O00o0O0O / O00o00O0OOo
elif IiII1I == 32 :
 CartooncrazyList ( )
 if 48 - 48: O00o0O0O / o000oOOo0oO . O00o0O0O * oOO + O0O000000Oo
elif IiII1I == 33 :
 listgenre ( oOi1IiII1 )
 if 68 - 68: iI * O00o0O0O % IIII * i1I * OOoOoO0o0o0OO
elif IiII1I == 34 :
 CartooncrazysubList ( oOi1IiII1 )
 if 91 - 91: i1I + oo0o * O00o0O0O / OO0O00 % iiIII % o0OO
elif IiII1I == 35 :
 iiiiIi ( oOi1IiII1 )
 if 9 - 9: O0O000000Oo
elif IiII1I == 36 :
 iiIIiIiiiiI ( oOi1IiII1 )
 if 52 - 52: OoO0 - OoO0 * o0OO * o000oOOo0oO + O0O000000Oo + o000oOOo0oO
elif IiII1I == 98 :
 xxxstars ( oOi1IiII1 )
 if 59 - 59: oo0o * O00o00O0OOo - O0ooOo0 % Ii / oo0o
elif IiII1I == 100 :
 i1IiI1iii ( )
 if 67 - 67: OO0O00 - iI - O0ooOo0 . O00o0O0O
 if 16 - 16: Ii * OoO0 * IIII % iI * OoO0 - iIiII1i1I
 if 68 - 68: O0ooOo0 . O0ooOo0 / O00o0O0O . O0O000000Oo
 if 93 - 93: Ii / O0ooOo0 - O00o0O0O * iI
 if 5 - 5: O00 * i1I * O00o00O0OOo + Ii % iIiII1i1I . O00o00O0OOo
xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) ) # 807cb1bfffb234dace3f930f571a9039d76f4cf9
')